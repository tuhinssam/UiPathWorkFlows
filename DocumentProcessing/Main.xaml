<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="508.8,2107.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow contains different methods (RegEx Extractor, Form Extractor, ML Extractor) Data Extaction Techniques to extract data from Fomatted or unformatted Docs and Steps to process the Stuctured/unstructured document formats" DisplayName="Document Understanding - Sequence" sap:VirtualizedContainerService.HintSize="488.8,2176" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="taxonomy_var" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="x:String" Name="doctxt" />
      <Variable x:TypeArguments="x:String" Name="digitized_txt" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="raw_extractionText" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="human_validated_result" />
      <Variable x:TypeArguments="sd1:DataSet" Name="dt_output" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="classification_result" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:LoadTaxonomy sap2010:Annotation.AnnotationText="The Taxonomy Manager can be used to create and edit a Taxonomy file specific to your current automation project. This Taxonomy file contains user-defined document types, sorted by Groups and Categories" DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="447.2,162.4" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy_var]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:LoadTaxonomy>
    <p:DigitizeDocument sap2010:Annotation.AnnotationText="Digitizes a document, extracting its Document Object Model (DOM) and text and storing them in their corresponding variable types." DegreeOfParallelism="1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="447.2,268" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
      <p:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" sap2010:Annotation.AnnotationText="OmniPageOCR is UiPath made OCR activity, can be used as alternative of other OCR engines" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,98.4" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uoa:OmniPageOCR>
        </ActivityFunc>
      </p:DigitizeDocument.OCREngine>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:DigitizeDocument>
    <ui:WriteTextFile sap2010:Annotation.AnnotationText="Write digitized text to a file to crosscheck all the values are getting digitized properly." DisplayName="Write Text File" FileName="digitizedText.txt" sap:VirtualizedContainerService.HintSize="447.2,178.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[digitized_txt]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteTextFile>
    <p1:ClassifyDocumentScope sap2010:Annotation.AnnotationText="Provides a scope for classifier activities, providing all of the necessary files needed to perform document classification. Accepts at least one classifier, and brokers between them, ensuring all parameters are forwarded to the child classification activities." ClassificationResults="[classification_result]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" sap:VirtualizedContainerService.HintSize="447.2,269.6" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy_var]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UId97c53ed94ca4231acd280522c9a30a7&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Service&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Service&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UId97c53ed94ca4231acd280522c9a30a7&quot;:&quot;0&quot;}}">
      <p1:ClassifyDocumentScope.Classifiers>
        <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="333.6,92" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\keyword.json" PersistenceId="UId97c53ed94ca4231acd280522c9a30a7">
          <p1:KeywordBasedClassifier.ClassifierResult>
            <OutArgument x:TypeArguments="p2:ClassifierResult">
              <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p1:KeywordBasedClassifier.ClassifierResult>
          <p1:KeywordBasedClassifier.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentObjectModel>
          <p1:KeywordBasedClassifier.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentPath>
          <p1:KeywordBasedClassifier.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentText>
          <p1:KeywordBasedClassifier.DocumentTypes>
            <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
              <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentTypes>
        </p1:KeywordBasedClassifier>
      </p1:ClassifyDocumentScope.Classifiers>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p1:ClassifyDocumentScope>
    <ui:CommentOut DisplayName="RegEx DataExt Scope-Comment Out" sap:VirtualizedContainerService.HintSize="447.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="475.2,495.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p4:DataExtractionScope ClassificationResult="{x:Null}" sap2010:Annotation.AnnotationText="Provides a scope for extractor activities, enabling you to configure them according to the document types defined in your taxonomy. The output of the activity is stored in an ExtractionResult variable, containing all automatically extracted data, and can be used as input for the Export Extraction Results activity. This activity also features a Configure Extractors wizard, which lets you specify exactly what fields from the document types defined in the taxonomy you want to extract." DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" DocumentTypeId="GlassIndustry.Invoice.Service" ExtractionResult="[raw_extractionText]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="433.6,402.4" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy_var]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI58f392e35d7e4879a4f5649b825e7c85&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Service&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Service.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI58f392e35d7e4879a4f5649b825e7c85&quot;:&quot;0&quot;},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI58f392e35d7e4879a4f5649b825e7c85&quot;:[]}}">
            <p4:DataExtractionScope.Extractors>
              <p4:RegexBasedExtractor sap2010:Annotation.AnnotationText="Enables to create and use a custom Regular Based Expression to extract information from a document. This activity can be used only together with the Data Extraction Scope activity." Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Service&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Service.Invoice#&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=INVOICE\\s#\\s)\\d{6})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=INVOICE\\\\s#\\\\s)\\\\d{6}\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}]&quot;&quot;},{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Service.DueDate&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=DUE\\sDATE\\s).+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=DUE\\\\sDATE\\\\s).+\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}]&quot;&quot;},{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Service.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL\\s).+(?=\\n{2}Make))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=TOTAL\\\\s).+(?=\\\\n{2}Make)\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}]&quot;&quot;}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="233.6,176.8" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UI58f392e35d7e4879a4f5649b825e7c85" Timeout="2000" UseVisualAlignment="False">
                <p4:RegexBasedExtractor.DocumentBounds>
                  <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                    <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                      <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:RegexBasedExtractor.DocumentBounds>
                <p4:RegexBasedExtractor.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:RegexBasedExtractor.DocumentObjectModel>
                <p4:RegexBasedExtractor.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:RegexBasedExtractor.DocumentPath>
                <p4:RegexBasedExtractor.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:RegexBasedExtractor.DocumentText>
                <p4:RegexBasedExtractor.ExtractorDocumentType>
                  <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                    <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                      <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:RegexBasedExtractor.ExtractorDocumentType>
                <p4:RegexBasedExtractor.ExtractorResult>
                  <OutArgument x:TypeArguments="p6:ExtractorResult">
                    <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                      <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p4:RegexBasedExtractor.ExtractorResult>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p4:RegexBasedExtractor>
            </p4:DataExtractionScope.Extractors>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </p4:DataExtractionScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="FormExt DataExt Scope-Comment Out" sap:VirtualizedContainerService.HintSize="447.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,333.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p4:DataExtractionScope ClassificationResult="{x:Null}" sap2010:Annotation.AnnotationText="FormExtractors is good in structured documents like forms and Receipts, alternate activity for unstructured doc is &quot;Intelligent Form Extractor&quot;. It requires API key and Endpoints to process the data as processing is done in remote server&#xD;&#xA;Endpoint: &quot;https://formextractor.uipath.com/&quot;" DisplayName="FormExt - Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" DocumentTypeId="GlassIndustry.Invoice.Service" ExtractionResult="[raw_extractionText]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="200,240.8" sap2010:WorkflowViewState.IdRef="DataExtractionScope_2" Taxonomy="[taxonomy_var]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Service&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Service.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:&quot;80&quot;},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:[]}}">
            <p4:DataExtractionScope.Extractors>
              <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="LarOpcDSChRENzkQJLuHgxBU44jpU/b4zwAEuGSCTVMbUrF9JaX7CZP3lV8r7v5Z" DisplayName="Form Extractor" Endpoint="https://formextractor.uipath.com/" sap:VirtualizedContainerService.HintSize="233.6,68.8" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UI4cf05a22ce5c4bacac292a828fe1b534" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Service&quot;,&quot;FormId&quot;:&quot;6259f472&quot;,&quot;FormName&quot;:&quot;Test&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,4250.0,5500.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Tiefland&quot;,&quot;Box&quot;:[334.3637,613.6212,575.3585,123.2612]},{&quot;Text&quot;:&quot;BILL&quot;,&quot;Box&quot;:[1225.52808,413.8046,164.3881,55.255]},{&quot;Text&quot;:&quot;TO&quot;,&quot;Box&quot;:[1224.11133,602.2841,100.6169,58.0886]},{&quot;Text&quot;:&quot;lass&quot;,&quot;Box&quot;:[337.1973,1388.79626,277.7593,120.4276]},{&quot;Text&quot;:&quot;AG&quot;,&quot;Box&quot;:[334.3637,1720.40686,229.5764,123.2612]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;Box&quot;:[740.3632,3497.03467,307.172,86.6382]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;Box&quot;:[921.5159,3426.14868,425.315,94.5144]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;Box&quot;:[3308.00562,3575.79663,315.0482,70.8858]}],&quot;Tables&quot;:[]}]}]">
                <p4:FormExtractor.DocumentBounds>
                  <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                    <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                      <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentBounds>
                <p4:FormExtractor.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentObjectModel>
                <p4:FormExtractor.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentPath>
                <p4:FormExtractor.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentText>
                <p4:FormExtractor.ExtractorDocumentType>
                  <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                    <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                      <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.ExtractorDocumentType>
                <p4:FormExtractor.ExtractorResult>
                  <OutArgument x:TypeArguments="p6:ExtractorResult">
                    <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                      <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p4:FormExtractor.ExtractorResult>
              </p4:FormExtractor>
            </p4:DataExtractionScope.Extractors>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </p4:DataExtractionScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="FormExt -using classifier- Comment Out" sap:VirtualizedContainerService.HintSize="447.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="475.2,263.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[classification_result(0)]" DisplayName="FormExt -using classifier - Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" ExtractionResult="[raw_extractionText]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="433.6,170.4" sap2010:WorkflowViewState.IdRef="DataExtractionScope_3" Taxonomy="[taxonomy_var]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Service&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Service.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:&quot;80&quot;},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI4cf05a22ce5c4bacac292a828fe1b534&quot;:[]}}">
            <p4:DataExtractionScope.Extractors>
              <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="LarOpcDSChRENzkQJLuHgxBU44jpU/b4zwAEuGSCTVMbUrF9JaX7CZP3lV8r7v5Z" DisplayName="Form Extractor" Endpoint="https://formextractor.uipath.com/" sap:VirtualizedContainerService.HintSize="233.6,68.8" sap2010:WorkflowViewState.IdRef="FormExtractor_2" MinOverlapPercentage="65" PersistenceId="UI4cf05a22ce5c4bacac292a828fe1b534" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Service&quot;,&quot;FormId&quot;:&quot;6259f472&quot;,&quot;FormName&quot;:&quot;Test&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,4250.0,5500.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Tiefland&quot;,&quot;Box&quot;:[334.3637,613.6212,575.3585,123.2612]},{&quot;Text&quot;:&quot;BILL&quot;,&quot;Box&quot;:[1225.52808,413.8046,164.3881,55.255]},{&quot;Text&quot;:&quot;TO&quot;,&quot;Box&quot;:[1224.11133,602.2841,100.6169,58.0886]},{&quot;Text&quot;:&quot;lass&quot;,&quot;Box&quot;:[337.1973,1388.79626,277.7593,120.4276]},{&quot;Text&quot;:&quot;AG&quot;,&quot;Box&quot;:[334.3637,1720.40686,229.5764,123.2612]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;Box&quot;:[740.3632,3497.03467,307.172,86.6382]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;Box&quot;:[921.5159,3426.14868,425.315,94.5144]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;Box&quot;:[3308.00562,3575.79663,315.0482,70.8858]}],&quot;Tables&quot;:[]}]}]">
                <p4:FormExtractor.DocumentBounds>
                  <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                    <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                      <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentBounds>
                <p4:FormExtractor.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentObjectModel>
                <p4:FormExtractor.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentPath>
                <p4:FormExtractor.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.DocumentText>
                <p4:FormExtractor.ExtractorDocumentType>
                  <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                    <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                      <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p4:FormExtractor.ExtractorDocumentType>
                <p4:FormExtractor.ExtractorResult>
                  <OutArgument x:TypeArguments="p6:ExtractorResult">
                    <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                      <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p4:FormExtractor.ExtractorResult>
              </p4:FormExtractor>
            </p4:DataExtractionScope.Extractors>
          </p4:DataExtractionScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <p4:DataExtractionScope DocumentTypeId="{x:Null}" sap2010:Annotation.AnnotationText="This is most advanced Extraction technique provided by UiPath. It takes 3 parameters:&#xD;&#xA;Endpoint: https://receipts.uipath.com or https://invoices.uipath.com&#xD;&#xA;ML Skill: can be used when using a custom ML Model deployed using AI Fabric&#xD;&#xA;APIKey: can be obtained from UiPath Cloud Platform&#xD;&#xA;UiPath.DocumentUnderstanding.ML.Activities package needs to be used&#xD;&#xA;&#xD;&#xA;" ClassificationResult="[classification_result(0)]" DisplayName="MLExtractor-using classifier - Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" ExtractionResult="[raw_extractionText]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="447.2,336.8" sap2010:WorkflowViewState.IdRef="DataExtractionScope_4" Taxonomy="[taxonomy_var]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI87d86c22a3794143ab3f012220e0f633&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Service&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Service.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice-no\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;due-date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Service.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Service.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI87d86c22a3794143ab3f012220e0f633&quot;:&quot;0&quot;},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI87d86c22a3794143ab3f012220e0f633&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;due-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-charges&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;item-po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;part-no&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
      <p4:DataExtractionScope.Extractors>
        <p7:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="LarOpcDSChRENzkQJLuHgxBU44jpU/b4zwAEuGSCTVMbUrF9JaX7CZP3lV8r7v5Z" Configuration="{}{&quot;Endpoint&quot;:&quot;https://invoices.uipath.com&quot;,&quot;ApiKey&quot;:&quot;\&quot;LarOpcDSChRENzkQJLuHgxBU44jpU/b4zwAEuGSCTVMbUrF9JaX7CZP3lV8r7v5Z\&quot;&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor" Endpoint="https://invoices.uipath.com" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_1" PersistenceId="UI87d86c22a3794143ab3f012220e0f633" RetryOnFailure="True" UseServerSideOCR="False">
          <p7:MachineLearningExtractor.AvailableMLSkills>
            <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
          </p7:MachineLearningExtractor.AvailableMLSkills>
          <p7:MachineLearningExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:MachineLearningExtractor.DocumentBounds>
          <p7:MachineLearningExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:MachineLearningExtractor.DocumentObjectModel>
          <p7:MachineLearningExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:MachineLearningExtractor.DocumentPath>
          <p7:MachineLearningExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:MachineLearningExtractor.DocumentText>
          <p7:MachineLearningExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p6:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:MachineLearningExtractor.ExtractorDocumentType>
          <p7:MachineLearningExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p6:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p7:MachineLearningExtractor.ExtractorResult>
        </p7:MachineLearningExtractor>
      </p4:DataExtractionScope.Extractors>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p4:DataExtractionScope>
    <p:PresentValidationStation sap2010:Annotation.AnnotationText="Validation Station is used to human validate the extracted data so that there is no error in extracted data" AutomaticExtractionResults="[raw_extractionText]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="Docs\Scanned Invoice.pdf" DocumentText="[digitized_txt]" sap:VirtualizedContainerService.HintSize="447.2,98.4" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[taxonomy_var]" ValidatedExtractionResults="[human_validated_result]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:PresentValidationStation>
    <p4:ExportExtractionResults sap2010:Annotation.AnnotationText="It takes validation station output and converts it two two tables: Rawdata, ExtractedData" DataSet="[dt_output]" DisplayName="Export Extraction Results" ExtractionResult="[human_validated_result]" sap:VirtualizedContainerService.HintSize="447.2,98.4" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p4:ExportExtractionResults>
    <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="447.2,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dt_output.Tables]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd1:DataTable">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="table" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,301.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,208.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteRange AddHeaders="True" DataTable="[table]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[table.TableName]" StartingCell="A1" WorkbookPath="RegEx_output_data.xlsx" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:WriteRange AddHeaders="True" DataTable="[table]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[table.TableName]" StartingCell="A1" WorkbookPath="FormExtract_output_data.xlsx" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>